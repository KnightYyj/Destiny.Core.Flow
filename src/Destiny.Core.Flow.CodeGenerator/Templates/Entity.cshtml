@using System;
@using Destiny.Core.Flow.CodeGenerator;
@{

    ProjectMetadata metadata = Model;
}
using System;
using System.Collections.Generic;
using System.ComponentModel;
using Destiny.Core.Flow.Entity;
namespace @(metadata.Namespace).Entities
{

    /// &lt;summary&gt;
    /// @(string.IsNullOrEmpty(metadata.EntityMetadata.DisplayName) ? metadata.EntityMetadata.EntityName : metadata.EntityMetadata.DisplayName)
    /// &lt;/summary&gt;
    [DisplayName("@(metadata.EntityMetadata.DisplayName)")]
    public partial class @metadata.EntityMetadata.EntityName : EntityBase&lt;@(metadata.EntityMetadata.PrimaryKeyType)&gt;
    @{ if (metadata.EntityMetadata.IsFullAudited())
    {<text>, IFullAuditedEntity&lt;@metadata.EntityMetadata.AuditedUserKeyType&gt;
     </text>}
    else
    {
    if (metadata.EntityMetadata.IsCreation)
    {<text>, ICreationAudited&lt;@metadata.EntityMetadata.AuditedUserKeyType&gt;
     </text>
    }
    if (metadata.EntityMetadata.IsModification)
    {<text>, IModificationAudited&lt;@metadata.EntityMetadata.AuditedUserKeyType&gt;
    </text>
}
if (metadata.EntityMetadata.IsSoftDelete)
{    <text>, ISoftDelete
     </text>
}
}
    }
    {
    @foreach (var property in metadata.EntityMetadata.Properties.Where(o => !o.IsPrimaryKey))
    {
        <text>
        /// &lt;summary&gt;
        /// 获取或设置 @property.DisplayName
        /// &lt;/summary&gt;
        [DisplayName("@property.DisplayName")]
        public @property.CSharpType @property.PropertyName { get; set; }
        </text>



    }

    @{

        if (metadata.EntityMetadata.IsFullAudited())
        {
        <text>
        /// &lt;summary&gt;
        /// 获取或设置最后修改用户
        /// &lt;/summary&gt;
        [DisplayName("最后修改用户")]
        public @metadata.EntityMetadata.AuditedUserKeyType? LastModifierUserId { get; set; }

        /// &lt;summary&gt;
        /// 获取或设置最后修改时间
        /// &lt;/summary&gt;
        [DisplayName("最后修改时间")]
        public DateTime? LastModifionTime { get; set; }

        /// &lt;summary&gt;
        /// 获取或设置是否删除
        /// &lt;/summary&gt;
        [DisplayName("是否删除")]
        public bool IsDeleted { get; set; }

        /// &lt;summary&gt;
        /// 获取或设置创建用户ID
        /// &lt;/summary&gt;
        [DisplayName("创建用户ID")]
        public @metadata.EntityMetadata.AuditedUserKeyType? CreatorUserId { get; set; }

        /// &lt;summary&gt;
        /// 获取或设置创建时间
        /// &lt;/summary&gt;
        [DisplayName("创建时间")]
        public  DateTime CreatedTime { get; set; }
        </text>
        }
        else
        {
            if (metadata.EntityMetadata.IsCreation)
            {
        <text>
        /// &lt;summary&gt;
        /// 获取或设置创建用户ID
        /// &lt;/summary&gt;
        [DisplayName("创建用户ID")]
        public @metadata.EntityMetadata.AuditedUserKeyType? CreatorUserId { get; set; }
        
        /// &lt;summary&gt;
        /// 获取或设置创建时间
        /// &lt;/summary&gt;
        [DisplayName("创建时间")]
        public  DateTime CreatedTime { get; set; }
        </text>
            }
            if (metadata.EntityMetadata.IsModification)
            {
        <text>
        /// &lt;summary&gt;
        /// 获取或设置最后修改用户
        /// &lt;/summary&gt;
        [DisplayName("最后修改用户")]
        public @metadata.EntityMetadata.AuditedUserKeyType? LastModifierUserId { get; set; }
        
        /// &lt;summary&gt;
        /// 获取或设置最后修改时间
        /// &lt;/summary&gt;
        [DisplayName("最后修改时间")]
        public DateTime? LastModifionTime { get; set; }
        </text>
            }
            if (metadata.EntityMetadata.IsSoftDelete)
            {
        <text>
        /// &lt;summary&gt;
        /// 获取或设置是否删除
        /// &lt;/summary&gt;
        [DisplayName("是否删除")]
        public bool IsDeleted { get; set; }
        </text>
            }
        }



    }

    }

  }
