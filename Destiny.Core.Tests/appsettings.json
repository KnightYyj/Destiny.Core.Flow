{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "Service": {
    "Name": "Destiny.Core.Flow.API",
    "Port": "80",
    "Version": "v1",
    "DocName": "Destiny.Core.Flow.API",
    "Title": "Destiny.Core.Flow.API Client Service API",
    "Description": "Destiny.Core.Flow.API Client Service API provide some API to help you get OA information",
    "XmlFile": "Destiny.Core.Flow.API.xml"
  },
  // 配置Consul中心
  "Consul": {
    "IP": "1065.cloud",
    "Port": "8863"
  },
  "Console": {
    "LogLevel": {
      "Default": "Information"
    }
  },
  "AllowedHosts": "*",
  "Destiny": {
    "Swagger": {
      "Title": "Destiny.Core.Flow.API",
      "Version": "v1",
      "Url": "/swagger/v1/swagger.json"
    },
    "AopManager": {
      "AopTran": {
        "Enabled": true //是否启用全局事务日志
      },
      "RedisCachingAop": {
        "Enabled": false //是否启用全局RedisAOP缓存
      },
      "LogAop": {
        "Enabled": false //是否启用全局AOP日志
      }
    },
    "InterceptorsModule": "Destiny.Core.Flow.Services", //AOP需要代理的层；这个位置根据生成项目的名称去做代理;我这里代理的是服务层
    "DbContext": {
      "MysqlConnectionString": "DestinyCoreDb.txt", //开发用数据库
      "MongoDBConnectionString": "DestinyCoreMongoDb.txt", //开发用数据库
      "MongoDBDataBase": "DestinyFlow" //开发用数据库
    },
    "Jwt": {
      "SecretKey": "{A4ECDB4C-DCDE-4BEF-B1B3-99E22A5419BE}",
      "Issuer": "Destiny",
      "Audience": "Destiny",
      "ExpireMins": 10080
    },
    "Cors": {
      "PolicyName": "Destiny.Core.Flow.API",
      "Url": "http://localhost:5001,http://localhost:8080,http://localhost:8848,http://192.168.199.217:7762,http://1065.cloud:9603" ////支持多个域名端口，注意端口号后不要带/斜杆：比如localhost:8000/，是错的
    },
    "IsAutoAddFunction": true,
    "Migrations": {
      "IsAutoMigration": false, //是否自动迁移
      "IsAddSeedData": false

    },
    "Redis": {

      "ConnectionString": "DestinyCoreRedis.txt"

    }
  }
}
